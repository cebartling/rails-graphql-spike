# Represents a movie.
type Movie  {
    id: ID!
    title: String!
    year: Int!
    budget_in_millions: Float!
    box_office_in_millions: Float!

    actors: [Actor]!
}

# Represents a movie actor.
type Actor {
    id: ID!
    name: String!
    gender: String!
    birth_date: String!

    movies: [Movie]!
}


## Root Mutation
#type Mutation {
#  # Save the favorite episode.
#  favorite(
#    # Favorite episode.
#    episode: Episode!
#  ): Episode
#}

# Root query
type Query {
    # Retrieve a movie by it's identifier.
    movie(
        # Movie identifier
        id: ID!
    ): Movie

    # Retrieve a collection of movies filtered by the year the movie was released.
    movies(
        # Movie released year filter
        year: Int
    ): [Movie]!

    # Retrieve a actor by it's identifier.
    actor(
        # Actor identifier
        id: ID!
    ): Actor

    # Retrieve a collection of actors filtered by the actor's gender.
    actors(
        # Actor gender filter
        gender: String
    ): [Actor]!
}

